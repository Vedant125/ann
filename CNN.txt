from tensorflow.keras.datasets import mnist
from tensorflow.keras.layers import Dense , Conv2D ,  Flatten , MaxPool2D
from tensorflow.keras import Sequential
from tensorflow.keras.utils import to_categorical

(x_train,y_train) , (x_test,y_test) = mnist.load_data()

x_train.shape , x_test.shape , y_train.shape , y_test.shape

x_train = x_train.reshape(-1,28,28,1) / 255
x_test = x_test.reshape(-1,28,28,1) / 255

y_train = to_categorical(y_train)
y_test = to_categorical(y_test)

model = Sequential()
model.add(Conv2D(64 , (3,3) , activation='relu' , input_shape = (28 , 28,1)))
model.add(MaxPool2D())
model.add(Conv2D(64,(3,3) , activation='relu'))
model.add(Flatten())
model.add(Dense(128 , activation='relu'))
model.add(Dense(10,activation='softmax'))

model.summary()

model.compile(loss='categorical_crossentropy',metrics=['accuracy'] , optimizer = 'adam')

model.fit(x_train,y_train,epochs=10,validation_data=(x_test,y_test))

loss , accuracy = model.evaluate(x_test,y_test)
print('Test Loss : ',loss)
print('Test Accuracy : ',accuracy)