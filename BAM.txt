import numpy as np

# Define two sets of patterns: Set A and Set B
# Set A: Input Patterns
x1 = np.array([1, 1, 1, 1, 1, 1]).reshape(6, 1)
x2 = np.array([-1, -1, -1, -1, -1, -1]).reshape(6, 1)

# Set B: Target Patterns
y1 = np.array([1, 1]).reshape(2, 1)
y2 = np.array([-1, -1]).reshape(2, 1)

# Calculate the weight matrices: W and W_T
W = np.dot(x1, y1.T) + np.dot(x2, y2.T)
W_T = np.dot(y1, x1.T) + np.dot(y2, x2.T)

# Testing Phase
# Test for Input Patterns: Set A
print("Testing for input patterns: Set A")
def testInputs(x, weight):
    # Compute the output pattern
    y = np.dot(weight, x)
    y[y < 0] = -1
    y[y >= 0] = 1
    return y

print("\nOutput of input pattern 1:")
print(testInputs(x1, W_T))
print("\nOutput of input pattern 2:")
print(testInputs(x2, W_T))

# Test for Target Patterns: Set B
print("\nTesting for target patterns: Set B")
def testTargets(y, weight):
    # Compute the output pattern
    x = np.dot(weight, y)
    x[x <= 0] = -1
    x[x > 0] = 1
    return x

print("\nOutput of target pattern 1:")
print(testTargets(y1, W))
print("\nOutput of target pattern 2:")
print(testTargets(y2, W))
